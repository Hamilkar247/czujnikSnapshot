# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'szablon.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QMovie
import time
import sys

class Ui_MainWindow(object):#WizardPage(object):

    def __init__(self):
        self.label = None #label na gifa
        self.label_2 = None #label na widget/mape
        self.movie = None #movie do odpalenia gifa
        self.timer = None #timer do zamiany zdjęć
        self.flagaWidget = 1 #flaga mowiaca czy jest teraz mapa czy widget
        self.centralWidget = None
        self.widthWindow = 925
        self.heightWindow = 810
        self.MainWindow = None

    def setupUi(self, MainWindow):#WizardPage):
        self.mainWindow = MainWindow
        self.mainWindow.setObjectName("MainWindow")
        self.mainWindow.setWindowTitle("MainWindow")
        self.mainWindow.resize(self.widthWindow, self.heightWindow)
        self.lab_gif = QtWidgets.QLabel(self.mainWindow)
        self.lab_gif.setGeometry(QtCore.QRect(0, 0, 931, 20))
        self.lab_gif.setText("")
        self.lab_gif.setScaledContents(True)
        self.lab_gif.setObjectName("label")
        self.movie = QMovie("10s.gif")
        self.lab_gif.setMovie(self.movie)
        self.movie.start()
        ########self.centralwidget = QtWidgets.QWidget(MainWindow)
        ########self.centralWidget.setObjectName("centralwidget")
        ########MainWindow.setCentralWidget(self.centralWidget)
        #MainWindow.resized.connect(self.someFunction)

        #QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.lab_MapOrWidget = QtWidgets.QLabel(MainWindow)
        self.lab_MapOrWidget.setGeometry(QtCore.QRect(0, 20, self.widthWindow, self.heightWindow-20))
        self.lab_MapOrWidget.setText("")
        self.lab_MapOrWidget.setPixmap(QtGui.QPixmap("kolno_map.png"))
        self.lab_MapOrWidget.setScaledContents(True)
        self.lab_MapOrWidget.setObjectName("label_2")
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.timer = QtCore.QTimer()
        self.timer.timeout.connect(self.changePicture)
        self.timer.setInterval(4980)
        self.timer.start()

    def changePicture(self):
        if self.flagaWidget == 0:
            self.lab_MapOrWidget.setPixmap(QtGui.QPixmap("kolno_map.png"))
            self.flagaWidget = 1
        else:
            self.lab_MapOrWidget.setPixmap(QtGui.QPixmap("widget_kolno.png"))
            self.flagaWidget = 0
            self.restartGifa

    def restartGifa(self):
        self.movie.stop()
        self.label.setMovie(self.movie)
        self.movie.start()

    def setSizeWindow(self):
        self.widthWindow = self.mainWindow.frameGeometry().width()
        self.heightWindow = self.mainWindow.frameGeometry().height()
        print("widthWindow :"+str(self.widthWindow))
        print("heightWindow :"+str(self.heightWindow))
        self.lab_MapOrWidget.setGeometry(QtCore.QRect(0, 20, self.widthWindow, self.heightWindow))

        self.lab_gif.setGeometry(QtCore.QRect(0, 0, self.widthWindow, 20))
class Window(QtWidgets.QMainWindow):
    resized = QtCore.pyqtSignal()
    def __init__(self, parent=None):
        super(Window, self).__init__(parent=parent)
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)
        self.resized.connect(self.resizeEventFunction)

    def resizeEvent(self, event):
        self.resized.emit()
        self.ui.setSizeWindow()
        return super(Window, self).resizeEvent(event)

    def resizeEventFunction(self):
        print("resizeEvent")
        #print("window width "+str(self.frameGeometry().width))

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    #WizardPage = QtWidgets.QWizardPage()
    w = Window()
    w.show()
   # MainWindow = QtWidgets.QMainWindow()
   # ui = Ui_WizardPage()

   # ui.setupUi(MainWindow)#WizardPage)
   # MainWindow.show()#WizardPage.show()
    sys.exit(app.exec_())
